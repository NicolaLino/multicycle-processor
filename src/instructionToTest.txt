
00001_00001_00011_00010_000000000_00_0
00011_00100_00010_00001_000000000_00_0

ADDI
00001_00001_00100_00000000101010_01_0


00001000010010100011000000000000
00001001010010000000001100100010

1 SW 2 LW 3 ADD
00011_00000_00010_00000001100100_01_0
00010_00000_00110_00000001100100_01_0
00001_00110_00111_00011_000000000_00_0


ADD R1 R3 R2
00001_00001_00011_00010_000000000_00_0
SUB R2 R2 R3
00010_00010_00010_00011_000000000_00_0



branch
00100_00001_00001_00000000010000_01_0 
00011_00000_00010_00000001100100_01_0 
00010_00000_00110_00000001100100_01_0 
00001_00110_00111_00011_000000000_00_0 
00001_00001_00011_00010_000000000_00_0 


Mem[0] = 00001000010000100000000000110010;//R1=R1+6  
Mem[4] = 00001000100001000000000000011010;//R2=R2+3
Mem[8] = 00010000010001100010000000000000;//R3=R2 - R1
Mem[C] = 00000000010010000000000100000110;//R4=R1 << 2
Mem[10] = 00001000000000000000000001000100;// JAL + 8
Mem[14] = 00000111111111111111111101000100;//Jump - 24
Mem[18] = 00011000000001100000000000000010;// sw r3, [r4+0]
Mem[1C] = 00010001010000000000000000000011;//lw r5, [r0 + 0] 
Mem[20] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;


00001000010000100000000000110010
00001000100001000000000000011010
00010000010001100010000000000000
00000000010010000000000100000110
00001000000000000000000000010100
00000111111111111111111111010100
00011000000001100000000000000010
00010001010000000000000000000011



DATA

00000000000000000000000000000001
00000000000000000000000000000010
00000000000000000000000000000011
00000000000000000000000000000100


00001000010000100000000000110010        //R1=R1+6
00001000100001000000000000011010        //R2=R2+3
00010000010001100010000000000000        //R3=R2+R1
00000000010010000000000100000110        //R4=R1<<2
00001000000000000000000000010100        // JAL +2
00000111111111111111111111011100        //Jump -5
00011000000001100000000000000010        // sw r3, [r4+0]
00010001010000000000000000000011        //lw r5, [r0 + 0] 
00000000000000000000000000000000        // No operation
00001000010000100000000000110010        //R1=R1+6
00001000100001000000000000011010        //R2=R2+3
00010000010001100010000000000000        //R3=R2+R1
00000000010010000000000100000110        //R4=R1<<2
00100000010001000000000000010010        // BEQ r1, r2, +2
00000111111111111111111111011100        //Jump -5
00011000000001100000000000000010        // sw r3, [r4+0]
00010001010000000000000000000011        //lw r5, [r0 + 0]
		
00001000010000100000000000011010        //R1=R1+3
00001000100001000000000000110010        //R2=R2+6
00001000100001100010000000000000        //R3=R2+R2
00000000010010000000000100000110        //R4=R1<<2
00100001000001100000000000010010        // BEQ r4, r3, +2
00000111111111111111111111011100        //Jump -5
00011000000001100000000000000010        // sw r3, [r4+0]
00010001010000000000000000000011        //lw r5, [r0 + 0]